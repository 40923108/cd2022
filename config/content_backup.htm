<h1>About</h1>
<p>40923108</p>
<p>倉儲連結：<a href="https://github.com/40923108/cd2022">https://github.com/40923108/cd2022</a></p>
<p>網站連結：<a href="https://40923108.github.io/cd2022/">https://40923108.github.io/cd2022/</a></p>
<h1>HW</h1>
<h2>W2</h2>
<p>分組名單</p>
<p><span style="background-color: #ffff00;"><strong>cd2022-ag1</strong></span><a href="https://a40923101.github.io/cd2022"><br/></a><a href="https://a40923101.github.io/cd2022">40923101 web</a><span> | </span><a href="https://github.com/a40923101/cd2022">a40923101 repo</a><span> |</span><br/><a href="https://40923103.github.io/cd2022">40923103 web</a><span> | </span><a href="https://github.com/40923103/cd2022">40923103 repo</a><span> |</span><br/><a href="https://40923108.github.io/cd2022">40923108 web</a><span> | </span><a href="https://github.com/40923108/cd2022">40923108 repo</a><span> |<br/></span><a href="https://40923119.github.io/cd2022">40923119 web</a><span> | </span><a href="https://github.com/40923119/cd2022">40923119 repo</a><span> |</span><br/><a href="https://a40923101.github.io/cd2022"></a><span></span><a href="https://40971134.github.io/cd2022">40971134 web</a><span> | </span><a href="https://github.com/40971134/cd2022">40971134 repo</a><span> |<br/><a href="https://40923137.github.io/cd2022">40923137 web</a> | <a href="https://github.com/40923137/cd2022">40923137 repo</a> |<br/><a href="https://40923154.github.io/cd2022">40923154 web</a> | <a href="https://github.com/40923154/cd2022">40923154 repo</a> |<br/><a href="https://zhilin-0817.github.io/cd2022">40923156 web</a> | <a href="https://github.com/ZHILIN-0817/cd2022">ZHILIN-0817 repo</a> |</span><br/><span></span></p>
<p><span style="background-color: #ffff00;"><strong>cd2022-ag2</strong></span><br/><a href="https://40923102.github.io/cd2022">40923102 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923102/cd2022">40923102 repo</a><span><span> </span>|</span><br/><a href="https://40923104.github.io/cd2022">40923104 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923104/cd2022">40923104 repo</a><span><span> </span>|</span><br/><a href="https://40923105.github.io/cd2022">40923105 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923105/cd2022">40923105 repo</a><span><span> </span>|</span><br/><a href="https://40923106.github.io/cd2022">40923106 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923106/cd2022">40923106 repo</a><span><span> </span>|</span><br/><a href="https://40923107.github.io/cd2022">40923107 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923107/cd2022">40923107 repo</a><span><span> </span>|</span><br/><a href="https://cyc40923109.github.io/cd2022">40923109 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/CYC40923109/cd2022">CYC40923109 repo</a><span><span> </span>|</span><br/><a href="https://40923110.github.io/cd2022">40923110 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923110/cd2022">40923110 repo</a><span><span> </span>|</span></p>
<p><span style="background-color: #ffff00;"><strong>cd2022-ag3</strong></span><br/><a href="https://40923114.github.io/cd2022">40923114 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923114/cd2022">40923114 repo</a><span><span> </span>|</span><br/><a href="https://jason60714.github.io/cd2022">40923115 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/jason60714/cd2022">jason60714 repo</a><span><span> </span>|</span><br/><a href="https://40923122.github.io/cd2022">40923122 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923122/cd2022">40923122 repo</a><span><span> </span>|</span><br/><a href="https://40923129.github.io/cd2022">40923129 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923129/cd2022">40923129 repo</a><span><span> </span>|</span><br/><a href="https://a40923146.github.io/cd2022">40923146 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/a40923146/cd2022">a40923146 repo</a><span><span> </span>|</span><br/><a href="https://40923148.github.io/cd2022">40923148 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923148/cd2022">40923148 repo</a><span><span> </span>|<br/><a href="https://40923157.github.io/cd2022">40923157 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923157/cd2022">40923157 repo</a><span><span> </span>|</span></span><br/><span></span></p>
<p><span><span style="background-color: #ffff00;"><strong>cd2022-ag4</strong></span><br/><a href="https://40923111.github.io/cd2022">40923111 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923111/cd2022">40923111 repo</a><span><span> </span>|</span></span><br/><a href="https://40923116.github.io/cd2022">40923116 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923116/cd2022">40923116 repo</a><span><span> </span>|</span><br/><a href="https://40923124.github.io/cd2022">40923124 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923124/cd2022">40923124 repo</a><span><span> </span>|</span><br/><a href="https://40923125.github.io/cd2022">40923125 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923125/cd2022">40923125 repo</a><span><span> </span>|</span><br/><a href="https://40923126-1.github.io/cd2022">40923126 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923126-1/cd2022">40923126-1 repo</a><span><span> </span>|</span><br/><a href="https://40923127-1.github.io/cd2022">40923127 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923127-1/cd2022">40923127-1 repo</a><span><span> </span>|</span><br/><a href="https://40923128.github.io/cd2022">40923128 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923128/cd2022">40923128 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span><span style="background-color: #ffff00;"><strong>cd2022-ag5</strong></span><br/><a href="https://40923120.github.io/cd2022">40923120 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923120/cd2022">40923120 repo</a><span><span> </span>|</span></span><br/><a href="https://40923123.github.io/cd2022">40923123 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923123/cd2022">40923123 repo</a><span><span> </span>|</span><br/><a href="https://40923133.github.io/cd2022">40923133 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923133/cd2022">40923133 repo</a><span><span> </span>|</span><br/><a href="https://40923134.github.io/cd2022">40923134 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923134/cd2022">40923134 repo</a><span><span> </span>|</span><br/><a href="https://40923135.github.io/cd2022">40923135 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923135/cd2022">40923135 repo</a><span><span> </span>|</span><br/><a href="https://40923139.github.io/cd2022">40923139 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923139/cd2022">40923139 repo</a><span><span> </span>|</span><br/><a href="https://40923142.github.io/cd2022">40923142 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923142/cd2022">40923142 repo</a><span><span> </span>|</span><br/><a href="https://40923151.github.io/cd2022">40923151 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923151/cd2022">40923151 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span style="background-color: #ffff00;"><strong>cd2022-ag6</strong></span><br/><a href="https://40923113.github.io/cd2022">40923113 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923113/cd2022">40923113 repo</a><span><span> </span>|<br/><a href="https://40923131.github.io/cd2022">40923131 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923131/cd2022">40923131 repo</a><span><span> </span>|</span></span><br/><a href="https://40923140.github.io/cd2022">40923140 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923140/cd2022">40923140 repo</a><span><span> </span>|</span><br/><a href="https://40923144.github.io/cd2022">40923144 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923144/cd2022">40923144 repo</a><span><span> </span>|</span><br/><a href="https://40923149r.github.io/cd2022">40923149 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923149r/cd2022">40923149r repo</a><span><span> </span>|</span><br/><a href="https://40923150.github.io/cd2022">40923150 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923150/cd2022">40923150 repo</a><span><span> </span>|</span><br/><a href="https://40923152.github.io/cd2022">40923152 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923152/cd2022">40923152 repo</a><span><span> </span>|</span><br/><span></span></p>
<p><span style="background-color: #ffff00;"><strong>cd2022-ag7</strong></span><br/><a href="https://40823132.github.io/cd2022">40823132 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40823132/cd2022">40823132 repo</a><span><span> </span>|</span><br/><a href="https://40823143.github.io/cd2022">40823143 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40823143/cd2022">40823143 repo</a><span><span> </span>|</span><br/><a href="https://maxlee999.github.io/cd2022">40923117 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/Maxlee999/cd2022">Maxlee999 repo</a><span><span> </span>|</span><br/><a href="https://40923118.github.io/cd2022">40923118 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923118/cd2022">40923118 repo</a><span><span> </span>|</span><br/><a href="https://40923136-1.github.io/cd2022">40923136 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923136-1/cd2022">40923136-1 repo</a><span><span> </span>|</span><br/><a href="https://40923143.github.io/cd2022">40923143 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923143/cd2022">40923143 repo</a><span><span> </span>|</span><br/><a href="https://40923145.github.io/cd2022">40923145 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923145/cd2022">40923145 repo</a><span><span> </span>|</span><br/><a href="https://40923147.github.io/cd2022">40923147 web</a><span><span> </span>|<span> </span></span><a href="https://github.com/40923147/cd2022">40923147 repo</a><span><span> </span>|</span></p>
<p></p>
<h2>W3</h2>
<p><span>本週任務：</span></p>
<p><span>38 個接近 NX1980 版本功能的教學影片，需以 Wink 影片互相對照的方式採 NX1980 執行操作進行整理，完成後將所負責的 Wink 教學影片嵌入個人與大分組的 w3 中。</span></p>
<p><strong><span style="color: #000000; background-color: #ccffff;">22.Rocker Arm working Drawing</span></strong></p>
<p><strong><span style="color: #000000;">概要：</span></strong><span style="color: #000000;">這部影片是講解將立體圖轉成工作圖、標註和剖面的方式，以及如何隱藏線型。</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX22.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><strong><span style="color: #000000; background-color: #ccffff;">23.Nx Linked Body Brake Rotor</span></strong></p>
<p><strong>概要：</strong>講述對原有的零件迴轉修剪、孔的定位等修改變成一個<strong>連體煞車盤。</strong></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX23.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>24.Nx Part Family Example</b></span></p>
<p><b>概要：</b>透過所提供的參數模型，對樂高積木陣列組件，創建一個系列的樂高積木。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX24.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>25.Nx Assembly Modeling-Pattern Component</b></span></p>
<p><b>概要：</b>講解如何使用<strong>測量</strong>、<strong>向量的陣列</strong>和<strong>零件約束</strong>以及更<strong>改零件顏色</strong>以便辨認等功能。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX25.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span style="background-color: #ccffff;"><b>26.Nx Exploded Views</b></span></p>
<p><b><strong>概要：</strong></b>講述著將一個組合件爆炸後進而轉成爆炸圖並說明如何創立零件表和件號。</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/NX26.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
</div>
</div>
<h2>W6</h2>
<p><span style="background-color: #ccffff;">啟動Leo</span></p>
<p><span>在小黑窗啟動<strong><span style="color: #000000;">Leo</span></strong></span></p>
<p><span><img alt="" height="441" src="/images/leo1.png" width="850"/></span></p>
<p><span><span>點選<span style="background-color: #ccffff;"><strong>File/Open-Outline</strong></span></span></span></p>
<p><span><span><img alt="" height="478" src="/images/leo2.png" width="850"/></span></span></p>
<p><span><span>開啟<span style="background-color: #ccffff;"><strong><span style="color: #000000;">pelican </span></strong></span></span></span></p>
<p><span style="background-color: #ffffff;">註：此檔存在tmp/cd2022/config下</span></p>
<p><span><span><img alt="" height="478" src="/images/leo3.png" width="850"/></span></span></p>
<p><span><span>將下列部分的原有的資料，改成<span style="background-color: #ccffff;"><strong>自己的學號</strong></span>和<span style="background-color: #ccffff;"><strong>標題<span style="background-color: #ffffff;">和<span style="background-color: #ccffff;">課程網頁連結</span></span></strong></span></span></span></p>
<p><strong><img alt="" height="478" src="/images/leo4.png" width="850"/></strong></p>
<p><strong><img alt="" height="478" src="/images/leo5.png" width="850"/></strong></p>
<p><strong><img alt="" height="478" src="/images/leo6.png" width="850"/></strong></p>
<p><span style="background-color: #ffffff;">更改此區域可在blog上顯示<span style="background-color: #ccffff;">標題</span>、<span style="background-color: #ccffff;">日期</span>、<span style="background-color: #ccffff;">類別</span>及<span style="background-color: #ccffff;">網頁存檔名稱</span></span></p>
<p><span style="background-color: #ffffff;">註：每個<span style="color: #ff0000;">slug</span>的名稱都要<span style="color: #ff0000;">不一樣</span>。</span></p>
<p><strong><img alt="" height="478" src="/images/leo7.png" width="850"/></strong></p>
<p><span>全部修改好後先<span style="background-color: #ccffff;">File/Save</span></span></p>
<p><span>接著對</span><span style="color: #ff0000;">local-blog</span><span>按下</span><span>右鍵</span><span>，在按下</span><span style="color: #ff0000;">Goto Script</span></p>
<p><span><img alt="" height="478" src="/images/leo8.png" width="850"/></span></p>
<p>複製此段後即可到小黑窗完成推送。</p>
<p><span><img alt="" height="265" src="/images/leo9.png" width="508"/></span></p>
<h2>W7</h2>
<p><span>uArm 機械手臂透過 Pick and Place 控制流程</span></p>
<p>使用onshape繪製零件圖：</p>
<p><img alt="" height="460" src="/images/零1.png" width="850"/></p>
<p><img alt="" height="458" src="/images/零2.png" width="850"/></p>
<p><img alt="" height="457" src="/images/零3.png" width="850"/></p>
<p><img alt="" height="460" src="/images/零4.png" width="850"/></p>
<p>組合：</p>
<p><img alt="" height="459" src="/images/零5.png" width="850"/></p>
<p>模擬影片：</p>
<h2>W8</h2>
<p>零件繪製：</p>
<p>組員分別以 Solvespace, NX (12, 1980 或 2008) 及 Onshape完成零件繪製。</p>
<p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
</p>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/零件們.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p><span>繪製眾多零件的</span><span>過程相當繁瑣，但透過兩人相互合作我們完成了40多個零件，接著是組合、模擬的部分，這因為比較不熟悉因此需要花更多心力摸索和討論。</span></p>
<p><span>組合圖：</span></p>
<p><span><img alt="" height="478" src="/images/Nx組合.png" width="850"/></span></p>
<p>將檔案存成stl檔後，匯入coppeliasim</p>
<p>GUI slider 控制前三軸作動：</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="https://40923108.github.io/cd2022/downloads/%E6%A9%9F%E6%A2%B0%E6%89%8B%E8%87%82UI%E4%BB%8B%E9%9D%A2%E6%8E%A7%E5%88%B6.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div><h2>W10</h2>
<h3>w10_block_ui</h3>
<p>w10_block_ui影片說明：</p>
<p><span>以p1 定義高度，p2 則設為長度，寬度設為 p3。</span></p>
<p><span>透過 NXOpen Python API 程式，對無列出長寬尺寸變數的零件進行操控。</span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="630" width="1008">
<source src="/downloads/w10_block_ui.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h3>w10_nx_integ</h3>
<p>w10_nx_integ影片說明：</p>
<p>修改nx的啟動檔，可同步開啟nx12、nx1980、nx2008</p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/w10_nx_integ.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h3>w10_ssh</h3>
<p>w10_ssh影片說明：</p>
<p>ssh設定的步驟說明</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/w10_ssh.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h2>W11</h2>
<p><span style="vertical-align: inherit;"><span><span style="vertical-align: inherit;"> 大組組員須將w8-</span></span><span style="vertical-align: inherit;"> w10<span>協同設計過程所負責的項目內容與心得</span>推送到<a href="https://40923108.github.io/cd2022ag1/content/index.html">cd2022ag1</a></span></span></p>
<h2>W12</h2>
<p>本週任務：</p>
<ol>
<li>
<p>cd2022_uarm_nx12_imported.7z 中, 若計入重複引用的零件, 總數有多少? 請列出組成此一 uarm 機械手臂所需的 BOM 列表。</p>
<p>Ans：<span>所需的零件總共有155個。<a href="https://github.com/40923108/cd2022/blob/main/downloads/BOM%E5%88%97%E8%A1%A8.txt">BOM列表</a></span></p>
</li>
<li>
<p><span>若不計入重複引用的零件, 總數有多少?請列出各零件名稱.</span></p>
<p>Ans：58個。分別為：M2X4 螺絲、M3X4 内六角圓頭螺絲、M3X5 内六角圓頭螺絲、M3X5 平頭螺絲、M3X5 沉頭螺絲、M3X5 扁平頭鐵鍍鎳螺絲、M3X5 圓頭黑色十字螺絲、M3X6 内六角圓頭螺絲、M3X15 雙通螺絲、M4X5 頂螺絲、M4X6 沉頭螺絲、M4X7 平頭螺絲、M4X10 平頭螺絲、M4X15 平頭螺絲、MF84、2mm導光柱、2mm導熱硅胶片、3Dprint轉接板、5-13-4軸承、6X2.5 磁鐵、8.3X1.5 防滑墊、前端通用件、前端關節、7mm 支撐柱、3mm 鋁支撐柱、三角形連桿軸承壓緊件、三角形連桿、絞鍊、主臂關節2、主臂關節1、電機軸承支撐座_左側、電機軸承支撐座_右側、右側曲柄、輸出軸、右側連桿、左側連桿、4mm 鋁支撐柱、減速箱上殼、減速箱下殼、L型連接件、軸承支撐軸、軸承支撐圈、底座上蓋、底座中間部分、底座蓋、磁编碼器PCB、42進步電機、塑料蓋板。</p>
</li>
<li>
<p>當執行機械手臂的設計過程中, 若已知各零件所擬採用的零件材料密度, 請問此一設計中的 uarm 機械手臂的淨重量為多少?</p>
<p>Ans：<span>30% 零件採 Steel 製, 其餘採 Aluminum 製, 總重量約 2.2205kg。</span><br/><span>         全部零件採 Aluminum 製, 總重量約 1.4123kg。</span><br/><span>         全部零件採 Steel 製, 總重量約 4.1062kg。</span></p>
</li>
</ol>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/w12.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<h3>NXOpen Python</h3>
<p></p>
<p><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"></span></span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/w12_task.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<p></p>
<div class="winkVideoPlayOverlayClass"></div>
<h1>Note</h1>
<h2>建立倉儲</h2>
<p>從課程網頁中提供的連結進去</p>
<p><img alt="" height="363" src="/images/建1.png" width="850"/></p>
<p><img alt="" height="478" src="/images/建1-1.png" width="850"/></p>
<p><img alt="" height="478" src="/images/建1-2.png" width="850"/></p>
<p><img alt="" height="478" src="/images/建1-3.png" width="850"/></p>
<p>複製網址 Import repository</p>
<p><img alt="" height="478" src="/images/建1-4.png" width="850"/></p>
<p><img alt="" height="478" src="/images/建1-5.png" width="850"/></p>
<p>即可建立倉儲</p>
<p><img alt="" height="478" src="/images/建4.png" width="850"/></p>
<h2>Leo</h2>
<p><span>在小黑窗啟動<strong><span style="color: #000000;">Leo</span></strong></span></p>
<p><span><img alt="" height="441" src="/images/leo1.png" width="850"/></span></p>
<p><span><span>點選<strong>File/Open-Outline</strong></span></span></p>
<p><span><span><img alt="" height="478" src="/images/leo2.png" width="850"/></span></span></p>
<p><span><span>開啟<strong><span style="color: #000000;">pelican</span></strong><img alt="" height="478" src="/images/leo3.png" width="850"/></span></span></p>
<p><span><span>將下列部分的原有的資料，改成<span style="background-color: #00ffff;"><strong>自己的學號</strong></span>和<span style="background-color: #00ffff;"><strong>標題</strong></span></span></span></p>
<p><strong><img alt="" height="478" src="/images/leo4.png" width="850"/></strong></p>
<p><strong><img alt="" height="478" src="/images/leo5.png" width="850"/></strong></p>
<p><strong><img alt="" height="478" src="/images/leo6.png" width="850"/></strong></p>
<p><strong><img alt="" height="478" src="/images/leo7.png" width="850"/></strong></p>
<p><span>修改好後對</span><span>local-blog</span><span>按下</span><span>右鍵</span><span>，在按下</span><span>Goto Script</span></p>
<p><span><img alt="" height="478" src="/images/leo8.png" width="850"/></span></p>
<p>複製此段後即可推送。</p>
<p><span><img alt="" height="265" src="/images/leo9.png" width="508"/></span></p>
<h2>Leo上放wink</h2>
<p>在新增wink原始碼前</p>
<p>增加<span style="color: #ff0000;">&lt;link rel="stylesheet" type="text/css" href="./../cmsimde/static/winkPlayer.css"&gt;&lt;/p&gt;</span><br/><span style="color: #ff0000;">&lt;script type="text/javascript" src="./../cmsimde/static/winkPlayer.js"&gt;&lt;/script&gt;</span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"><img alt="" height="478" src="/images/leo wink1.png" width="850"/></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">刪除紅色底線處的文字</span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"><img alt="" height="478" src="/images/leo wink2.png" width="850"/></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;">即可儲存，按照原本的方式<a href="https://40923108.github.io/cd2022/content/Leo.html">推送</a></span></span></p>
<p><span style="color: #ff0000;"><span style="color: #000000;"></span></span></p>
<h1>Midterm</h1>
<p>組員分別以 Solvespace, NX (12, 1980 或 2008) 及 Onshape完成零件繪製。</p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/零件們.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
<p>心得： 繪製眾多零件的過程相當繁瑣，但透過兩人相互合作我們完成了40多個零件，接著是組合、模擬的部分，這因為比較不熟悉因此需要花更多心力摸索和討論。</p>
<h1>Online</h1>
<h2>W13</h2>
<p><span>本週任務：</span></p>
<p><span>下載CoppeliaSim3.0版</span></p>
<p><span>並利用Coppeliasim模擬MTB運動的樣子</span></p>
<p><span><img alt="" height="478" src="/images/copp4.3.png" width="850"/></span></p>
<p><span><img alt="" height="478" src="/images/MTB.png" width="850"/></span></p>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
<div class="winkVideoPlayOverlayClass"></div>
<h2>W14</h2>
<p><a href="https://mde.tw/cd2022_guide/downloads/w13/mtb_nx/MTB_nx_kinematic.ttt">MTB_nx_kinematic.ttt</a></p>
<div class="winkVideoControlBarProgressThumbClass"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以程式自己作動：</span></span></span></span></span></span></span></span></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
<div class="winkVideoControlBarProgressThumbClass"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/8UnfW5zgOZ4" width="560"></iframe></div>
<div class="winkVideoControlBarProgressThumbClass"><span></span></div>
<div class="winkVideoControlBarProgressThumbClass"><span> </span></div>
<div class="winkVideoControlBarProgressThumbClass"><span></span></div>
<div class="winkVideoControlBarProgressThumbClass"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;"><span style="vertical-align: inherit;">以鍵盤控制 MTB_nx 機器人（適用於 CoppeliaSim 4.3.0）：</span></span></span></span></span></span></span></span></div>
<div class="winkVideoControlBarProgressThumbClass"><span></span></div>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/T0ypf9G3V6A" width="560"></iframe></p>
<h2>W15</h2>
<p><span>利用</span><span>UARM</span><span>來Tic-Tae-Toe遊戲模擬</span></p>
<p><span><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/SMOMMEPeg8w" width="560"></iframe></span></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">function sysCall_init()
    axis1=sim.getObject('./joint1')
    axis2=sim.getObject('./joint2')
    axis3=sim.getObject('./joint3')
    suctionPad=sim.getObject('/suctionPad')
    rotation1 = 0
    rotation2 = 0
    rotation3 = 0
    deg = math.pi/180.
    enableSuctionPad(true)
end
function enableSuctionPad(enable)
    -- use the suctionPad object to pass the variable activity value
    -- if enable = true, the activity = 'on'
    if enable then
        sim.writeCustomDataBlock(suctionPad,'activity','on')
    else
        sim.writeCustomDataBlock(suctionPad,'activity','off')
    end
end
function sysCall_actuation() 
--[[
    rotation1 = rotation1 + 1*deg
    print(rotation1)
    sim.setJointPosition(axis1, -rotation1)
    sim.setJointPosition(axis2, -rotation1)
]]
    message, auxiliaryData=sim.getSimulatorMessage()
    while message ~= -1 do
        key=auxiliaryData[1]
        sim.addStatusbarMessage('user press key:'..key)
        if (message==sim.message_keypress) then
           --if (auxiliaryData[1]==112) then --p activate the suction pad
            if (auxiliaryData[1]==string.byte('p')) then
                -- if key p pressed activate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','true')
                enableSuctionPad(true)
            end -- if p
            if (auxiliaryData[1]==string.byte('q')) then --q deactivate the suction pad
                -- if key q pressed deactivate the suction mode
--sim.setScriptSimulationParameter(sim.getScriptAssociatedWithObject(suctionPad),'active','false')
                enableSuctionPad(false)
            end -- if q
            if (auxiliaryData[1]==string.byte('k')) then --k right turn in degree
                -- if key k pressed axis1 angle adds 2 degrees
                 rotation1 = rotation1 + 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if k
            if (auxiliaryData[1]==string.byte('l')) then --l left turn in degree
                -- if key l pressed axis1 angle substract 2 degrees
                 rotation1 = rotation1 - 2*deg
                 --sim.setJointPosition(axis1, rotation1)
                 sim.setJointTargetPosition(axis1, rotation1)
            end -- if l
-- for joint2 start ##########################################################
            if (auxiliaryData[1]== string.byte("h")) then --r right turn in degree
                -- if key r pressed axis1 angle adds 2 degrees
                 rotation2 = rotation2 + 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if k
            if (auxiliaryData[1]==string.byte("j")) then
                -- if key j pressed axis2 angle substract 2 degrees
                 rotation2 = rotation2 - 1*deg
                 --sim.setJointPosition(axis2, rotation2)
                 sim.setJointTargetPosition(axis2, rotation2)
            end -- if j
-- for joint2 end ##########################################################
-- for joint3 start ##########################################################
            if (auxiliaryData[1]== string.byte("f")) then
                -- if key f pressed axis3 angle adds 2 degrees
                 rotation3 = rotation3 + 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if f
            if (auxiliaryData[1]==string.byte("g")) then
                -- if key g pressed axis3 angle substract 2 degrees
                 rotation3 = rotation3 - 1*deg
                 --sim.setJointPosition(axis3, rotation3)
                 sim.setJointTargetPosition(axis3, rotation3)
            end -- if g
-- for joint3 end ##########################################################
            if (auxiliaryData[1]==99) then --c coordinate of block
                blockPosition = sim.getObjectPosition(block, BaseFrame)
                sim.addStatusbarMessage("coordinate:"..table_to_string(blockPosition))
            end --if c
       end  -- if
    message, auxiliaryData=sim.getSimulatorMessage()
    end -- while
end -- function
 
function sysCall_sensing() 
--[[
    -- Read Proximity sensor (0= nothing detected, 1 = object detected)
    local res = sim.readProximitySensor(proximity)
 
    -- Check if possible to insert an new box
    if (sim.getSimulationTime()-T_last_inserted &gt; T_insert) and not hasStopped then
        insertBox()
    end
 
    -- If proximity sensor detects an object, stop the belt, stop inserting objects
    if res == 1 and not hasStopped then
        if boolList[1] then
            sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",0)
            deltaTime = sim.getSimulationTime()-T_last_inserted
            hasStopped = true
        else
            local box = table.remove(boxList,1)
            local boxDummy = table.remove(boxDummyList,1)
            table.remove(boolList,1)
 
            sim.removeObject(box)
            sim.removeObject(boxDummy)
        end
    end
 
    -- If proximity sensor detects nothing and belt has stopped, start belt, continue inserting
    if res == 0 and hasStopped then
        sim.setScriptSimulationParameter(sim.handle_self,"conveyorBeltVelocity",beltSpeed)
        hasStopped = false
        T_last_inserted = sim.getSimulationTime()-deltaTime
    end
     
]]--
end
function sysCall_sensing()
    -- put your sensing code here
end
function sysCall_cleanup()
    -- do some clean-up here
end
-- Convert a lua table into a lua syntactically correct string
function table_to_string(tbl)
    local result = "{"
    for k, v in pairs(tbl) do
        -- Check the key type (ignore any numerical keys - assume its an array)
        if type(k) == "string" then
            result = result.."[\""..k.."\"]".."="
        end
        -- Check the value type
        if type(v) == "table" then
            result = result..table_to_string(v)
        elseif type(v) == "boolean" then
            result = result..tostring(v)
        else
            v = round(v, 4)
            result = result.."\""..v.."\""
        end
        result = result..","
    end
    -- Remove leading commas from the result
    if result ~= "" then
        result = result:sub(1, result:len()-1)
    end
    return result.."}"
end
function round(x, n)
    n = math.pow(10, n or 0)
    x = x * n
    if x &gt;= 0 then x = math.floor(x + 0.5) else x = math.ceil(x - 0.5) end
    return x / n
end
function insertBox()
    -- Generate random numbers
    local rand1 = math.random()
    local rand2 = math.random()
    local rand3 = math.random()
    -- Generate random disturbances on position and orientation
    local dx = (2*rand1-1)*0.1
    local dy = (2*rand2-1)*0.1
    local dphi = (2*rand3-1)*0.5
    local disturbedCoordinates = {0,0,0}
    disturbedCoordinates[1] = insertCoordinate[1]+dx
    disturbedCoordinates[2] = insertCoordinate[2]+dy
    disturbedCoordinates[3] = insertCoordinate[3]
    -- Copy and paste box and boxDummy
    local insertedObjects = sim.copyPasteObjects({box,boxDummy},0)
    -- Update last inserted box time
    T_last_inserted = sim.getSimulationTime()
    -- Move and rotate
    sim.setObjectPosition(insertedObjects[1],-1,disturbedCoordinates)
    sim.setObjectOrientation(insertedObjects[1],-1,{0,0,dphi})
    -- Store handles to boxes and dummies
    table.insert(boxList,insertedObjects[1])
    table.insert(boxDummyList,insertedObjects[2]) 
    -- Decide if object is good or bad
    local decision = math.random() 
    if decision &lt;= goodPercentage then
    -- Object is good, assign goodColor
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,goodColor)
        table.insert(boolList,true)
    else
    -- Object is bad, assign random color
        sim.setShapeColor(insertedObjects[1],nil,sim.colorcomponent_ambient_diffuse,{rand1,rand2,rand3})
        table.insert(boolList,false)
    end
end
-- See the user manual or the available code snippets for additional callback functions and details</pre>
<p></p>
<p><span></span></p><h2>W16</h2>
<h3>Online Exam</h3>
<p>1.已知左側綠色底座的 uArm 機械手臂, 其基座座標原點位於絕對座標 (1.0, 0.25, 0), 啟動模擬後 green_suctionpad_frame 座標原點則位於 (0.22859, 0.26047, 0.36576), 請列出運算式說明, 啟動模擬後 joint1, joint2 與 joint3 分別以逆時針旋轉 5 度後, 求 green_suctionpad_frame 的絕對座標值?</p>
<p>Ans：X(0.264)，Y(0.1958)，Z(0.3895)</p>
<p><img alt="" height="478" src="/images/test .png" width="850"/></p>
<p><span>joint1：k</span>為逆時針，l<span>為順時針</span></p>
<p><span>joint2：h<span>為逆時針，j</span><span>為順時針</span></span></p>
<p><span>joint3：f<span>為逆時針，g</span><span>為順時針</span></span></p>
<p><img alt="" height="478" src="/images/code1.png" width="850"/></p>
<p></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/online test-1.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"><hr/></div>
</div>
</div>
<p>2.已知左側 uarm 前方的紅色方塊頂端中心座標值為 (0.2, 0.4, 0.1), 請列出運算式說明左側 uarm 機械手臂的 joint1, joint2 與 joint3 該如何旋轉才能讓 end effector 的吸盤末端中心點移動至紅色方塊頂端中心?</p>
<p>Ans：<span>joint1順時針10度，joint2逆</span><span>時針28度調整，joint3<span>順時針32度就可以接近紅色方塊的中心。</span></span></p>
<p><span><span><img alt="" height="478" src="/images/test2.png" width="850"/></span></span></p>
<p><span>joint1：u</span>為逆時針，i<span>為順時針</span></p>
<p><span>joint2：t<span>為逆時針，y</span><span>為順時針</span></span></p>
<p><span>joint3：e<span>為逆時針，r</span><span>為順時針</span></span></p>
<p><span><span><img alt="" height="478" src="/images/code2.png" width="850"/></span></span></p>
<h3>Visualization Stream</h3>
<p><span>利用 OpenCV 結合 Flask 將模擬場景中的 Vision Sensor 影像串流至使用者的瀏覽器端，並透過 Python Remote API 控制伺服器場景與實體機電系統中的制動元件， 可讓使用者透過網際介面觀看並操控遠端場景中的幾何物件。</span></p>
<p><span>任務步驟：</span></p>
<ol>
<li><span>以 CoppeliaSim 4.3.0 rev3 開啟 uarm_nx_tkinter_gui_control.ttt</span></li>
<li>啟動模擬之前, 從 <span style="color: #ff0000;">Modules /Connectivity</span> 右方表單中， 點選 <span style="color: #ff0000;">Visualization Stream<span style="color: #000000;">(表</span></span>示要啟動場景的視覺串流伺服器)。</li>
<li><span>啟動 uarm_nx_tkinter_gui_control 場景模擬</span></li>
<li><span>將<span style="color: #000000;">uarm_tkinter_control.py拉至白窗，並按下<span style="color: #ff0000;">Tools/Go</span></span></span><span><span style="color: #000000;"><span style="color: #ff0000;"></span></span></span></li>
</ol>
<p><span style="color: #000000;"></span></p>
<script>
var winkVideoData = {
  dataVersion: 1,
  frameRate: 20,
  buttonFrameLength: 10,
  buttonFrameOffset: 5,
  frameStops: {
  },
};
</script>
<div class="winkVideoContainerClass"><video class="winkVideoClass" data-dirname="/static" data-varname="winkVideoData" height="540" width="960">
<source src="/downloads/W16_Visualization Stream.mp4" type="video/mp4"/></video>
<div class="winkVideoOverlayClass"></div>
<div class="winkVideoControlBarClass"><button class="winkVideoControlBarPlayButtonClass"></button> <button class="winkVideoControlBarPauseButtonClass"></button>
<div class="winkVideoControlBarProgressLeftClass"></div>
<div class="winkVideoControlBarProgressEmptyMiddleClass"></div>
<div class="winkVideoControlBarProgressRightClass"></div>
<div class="winkVideoControlBarProgressFilledMiddleClass"></div>
<div class="winkVideoControlBarProgressThumbClass"></div>
</div>
<div class="winkVideoPlayOverlayClass"></div>
</div>
</div>
</div>
<h1>期末考週</h1>
<p></p>